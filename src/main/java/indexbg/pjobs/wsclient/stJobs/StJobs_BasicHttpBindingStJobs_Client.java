
package indexbg.pjobs.wsclient.stJobs;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import java.util.List;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


import com.indexbg.system.db.JPA;
import com.indexbg.system.db.dto.SystemClassif;

import indexbg.pjobs.db.Jobs;
import indexbg.pjobs.system.Constants;
import indexbg.pjobs.system.SystemData;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2019-04-10T15:15:53.121+03:00
 * Generated source version: 2.7.18
 * 
 */
public final class StJobs_BasicHttpBindingStJobs_Client {

    private static final QName SERVICE_NAME = new QName("https://eisuchrda.egov.bg/IISDAIntegrationServices/Common", "StJobs");

    private StJobs_BasicHttpBindingStJobs_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        try {
        	
        	SystemData sd = new SystemData();
        	Long useId = -1L;
        	Long lang = Constants.CODE_DEFAULT_LANG;
        	
        	//Длъжностно ниво CODE_SYSCLASS_POSITION_LEVEL
        	List<SystemClassif> levelClassif = sd.getSysClassification(Constants.CODE_SYSCLASS_POSITION_LEVEL, new Date(), lang, useId );
        	
        	//Правоотношение  CODE_SYSCLASS_TREATMENT
        	List<SystemClassif> pravoClassif = sd.getSysClassification(Constants.CODE_SYSCLASS_TREATMENT, new Date(), lang, useId );
        	
        	//Ранг CODE_SYSCLASS_RANK
        	List<SystemClassif> rangClassif = sd.getSysClassification(Constants.CODE_SYSCLASS_RANK, new Date(), lang, useId );
        	
        	//Степен на образование CODE_SYSCLASS_EDUCATION_DEGREE
        	List<SystemClassif> obrClassif = sd.getSysClassification(Constants.CODE_SYSCLASS_EDUCATION_DEGREE, new Date(), lang, useId );
        	
        	
			URL wsdlURL = StJobs_Service.WSDL_LOCATION;
			if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
			    File wsdlFile = new File(args[0]);
			    try {
			        if (wsdlFile.exists()) {
			            wsdlURL = wsdlFile.toURI().toURL();
			        } else {
			            wsdlURL = new URL(args[0]);
			        }
			    } catch (MalformedURLException e) {
			        e.printStackTrace();
			    }
			}
     
			StJobs_Service ss = new StJobs_Service(wsdlURL, SERVICE_NAME);
			StJobs port = ss.getBasicHttpBindingStJobs();
			
			JobClassifierCode code =  JobClassifierCode.KDA;
			ArrayOfJobClassification res = port.getJobsClassification(code);
			
			System.out.println(res.jobClassification.size());
			
			JPA.getUtil().begin();
			for (JobClassification tek : res.jobClassification) {
				
				//System.out.println(tek.getJobId().getValue() + " -> " + tek.getJobName().getValue());
				
				Jobs job = new Jobs();
				
				if (tek.getJobCode() != null) {
					job.setJobCode(tek.getJobCode().getValue());
				}
				
				if (tek.getJobId() != null) {
					job.setJobId(tek.getJobId().getValue());
				}
				
				if (tek.getParentId() != null) {
					job.setParentId(tek.getParentId().getValue());
				}
				
				if (tek.getJobName() != null) {
					job.setJobName(tek.getJobName().getValue());
				}
				
				if (tek.getJObShortName() != null) {
					job.setJobShortName(tek.getJObShortName().getValue());
				}
				
				if (tek.getJobLevelCode() != null) {
					job.setLevelCode(tek.getJobLevelCode().getValue());
				}
				
				if (tek.getJobLevelName() != null) {
					job.setLevelName(tek.getJobLevelName().getValue());
					
					Long scCode = findItemCode(levelClassif, job.getLevelName());
					job.setLevelNameSc(scCode);
					//System.out.println(scCode);
				}
				
				if (tek.getMinimumProfExperience() != null) {
					job.setMinProofExperience(tek.getMinimumProfExperience().getValue());
				}
				
				if (tek.getMinimumQualification() != null && tek.getMinimumQualification().getValue() != null) {
					job.setMinQualification(tek.getMinimumQualification().getValue().value());
					
					Long scCode = findItemCode(obrClassif, job.getMinQualification());
					job.setMinQualificationSc(scCode);
					//System.out.println(scCode);
				}
				
				
				
				if (tek.getMinimumRang() != null && tek.getMinimumRang().getValue() != null && tek.getMinimumRang().getValue().getMinimumRangName() != null) {
					job.setMinRang(tek.getMinimumRang().getValue().getMinimumRangName().getValue());
					
					Long scCode = findItemCode(rangClassif, job.getMinRang());
					job.setMinRangnSc(scCode);
					//System.out.println(scCode);
				}
				
				
				if (tek.getMinimumRang() != null && tek.getMinimumRang().getValue() != null && tek.getMinimumRang().getValue().getMinimumRangId() != null) {
					job.setMinRangCode(new Long(tek.getMinimumRang().getValue().getMinimumRangId().longValue()));
				}
				
				
				if (tek.getJobClassificationRowType() != null ) {
					job.setTypeItem(tek.getJobClassificationRowType().value());
					
					
				}
				
				
				if (tek.getServiceType() != null && tek.getServiceType().getValue() != null) {
					job.setPravo(tek.getServiceType().getValue().value());
					
					Long scCode = findItemCode(pravoClassif, job.getPravo());
					job.setPravoSc(scCode);
					//System.out.println(scCode);
				}
				
				
				
//				if (tek.getCategory() != null && tek.getCategory().getValue() != null && tek.getCategory().getValue().category != null && tek.getCategory().getValue().category.size() > 0) {
//					System.out.println("");
//				}
				
				
				
				if (job.getJobName() == null || job.getJobName().isEmpty()) {
					continue;
				}
				
				job.setStatus(tek.status);
				
				JPA.getUtil().getEntityManager().persist(job);
			
			}
			
			//JPA.getUtil().rollback();
			JPA.getUtil().commit();
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
        
        
//        {
//        System.out.println("Invoking getJobsClassification...");
//        indexbg.pjobs.wsclient.stJobs.JobClassifierCode _getJobsClassification_classificationCode = null;
//        indexbg.pjobs.wsclient.stJobs.ArrayOfJobClassification _getJobsClassification__return = port.getJobsClassification(_getJobsClassification_classificationCode);
//        System.out.println("getJobsClassification.result=" + _getJobsClassification__return);
//
//
//        }

        System.exit(0);
    }
    
    
    public static Long findItemCode(List<SystemClassif> classif, String tekst) {
    	
    	
    	if (tekst == null) {
    		return null;
    	}else {
    		tekst = tekst.trim();
    	}
    	
    	for (SystemClassif tek : classif) {
    		if (tek.getCodeExt() != null && tek.getCodeExt().trim().equalsIgnoreCase(tekst)) {
    			return tek.getCode();
    		}else {
    			if (tek.getTekst() != null && tek.getTekst().trim().equalsIgnoreCase(tekst)) {
    				return tek.getCode();
    			}
    		}
    	}
    	
    	System.out.println("Значението " + tekst + " не може да бъде намерено в класификация с код " + classif.get(0).getCodeClassif());
    	return null;
    }
    

}
